# This is a workflow to upload assets to FindML bucket

name: Upload Tesseract Insights to AWS Acct

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "upload-insights" to push assets
  upload-insights:
    name: Build or Update sceptre stack
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: tesseract
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Configure AWS Credentials from Production Account
      - name: Configuring Dev Private user
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          role-duration-seconds: 3600
          aws-region: us-west-2

      # Upload assets
      - name: upload assets
        id: upload_task
        run: |
          aws sts get-caller-identity
          environment_val=`aws ssm get-parameter --name /AdminParams/Team/Environment --query "Parameter.Value" --output text`
          team_name_val=`aws ssm get-parameter --name /AdminParams/Team/Name --query "Parameter.Value" --output text`
          bucket_name="gd-$team_name_val-$environment_val-tesseract"
          aws s3 sync . s3://$bucket_name/tesseract_input --delete --exclude ".*"
          
      # Notify on slack
      # Always checkout - https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
      - name: Get GD version of rtCamp actions
        if: ${{ always() }}
        uses: actions/checkout@v2
        with:
          repository: gdcorp-action-public-forks/action-slack-notify
          token: ${{ secrets.CLOUD_CREDS_UPDATE_TKN }}
          path: slack-notify-action
          
      # Post following message on Job Success
      - name: Success Notifier
        if: ${{ success() }}
        uses: ./slack-notify-action
        env:
          SLACK_CHANNEL: tesseract-deployments
          SLACK_USERNAME: ahpBot
          SLACK_ICON_EMOJI: ':clapping:'
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Stack launch/Update successful for ${{  github.event.inputs.stack_path }} :highfive:'
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERTS }}
          SLACK_FOOTER: ahpBot GitHub notification
      
      # Post following message on Job Failure
      - name: Failure Notifier
        if: ${{ failure() }}
        uses: ./slack-notify-action
        env:
          SLACK_CHANNEL: tesseract-deployments
          SLACK_USERNAME: ahpBot
          SLACK_ICON_EMOJI: ':headbang:'
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Stack launch/Update failed for ${{  github.event.inputs.stack_path }} \n ${{steps.build_task.outputs.output}} '
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERTS }}
          SLACK_FOOTER: ahpBot GitHub notification
          
      # Post following message on Job Cancellation
      - name: Cancel Notifier
        if: ${{ cancelled() }}
        uses: ./slack-notify-action
        env:
          SLACK_CHANNEL: tesseract-deployments
          SLACK_USERNAME: ahpBot
          SLACK_ICON_EMOJI: ':depressed:'
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Stack launch/Update cancelled for ${{  github.event.inputs.stack_path }} :sad:'
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERTS }}
          SLACK_FOOTER: ahpBot GitHub notification
